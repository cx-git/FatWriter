Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 41.67      0.05     0.05                             std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >::_M_run()
 16.67      0.07     0.02    95322     0.00     0.00  WriterImpl::printf(char const*, ...)
  8.33      0.08     0.01   145302     0.00     0.00  std::lock_guard<std::mutex>::lock_guard(std::mutex&)
  8.33      0.09     0.01                             fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)
  8.33      0.10     0.01                             WriterImpl::release_buffer()
  4.17      0.11     0.01   136645     0.00     0.00  std::_List_iterator<WriterHubImpl::ManageUnit>::operator->() const
  4.17      0.11     0.01        6     0.83     0.83  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::clear()
  4.17      0.12     0.01                             std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, std::allocator<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  4.17      0.12     0.01                             std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, std::allocator<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00      0.12     0.00   304519     0.00     0.00  __gthread_active_p()
  0.00      0.12     0.00   176125     0.00     0.00  std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const
  0.00      0.12     0.00   152276     0.00     0.00  std::mutex::unlock()
  0.00      0.12     0.00   152259     0.00     0.00  __gthread_mutex_unlock(pthread_mutex_t*)
  0.00      0.12     0.00   152234     0.00     0.00  __gthread_mutex_lock(pthread_mutex_t*)
  0.00      0.12     0.00   152120     0.00     0.00  std::mutex::lock()
  0.00      0.12     0.00   145431     0.00     0.00  std::lock_guard<std::mutex>::~lock_guard()
  0.00      0.12     0.00   136649     0.00     0.00  WriterHubImpl::ManageUnit* std::__addressof<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&)
  0.00      0.12     0.00   111331     0.00     0.00  WriterImpl::is_file_open()
  0.00      0.12     0.00   111166     0.00     0.00  std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const
  0.00      0.12     0.00   108114     0.00     0.00  std::_List_iterator<WriterHubImpl::ManageUnit>::operator++()
  0.00      0.12     0.00    98275     0.00     0.00  std::_List_iterator<WriterHubImpl::ManageUnit>::_List_iterator(std::__detail::_List_node_base*)
  0.00      0.12     0.00    68060     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end()
  0.00      0.12     0.00    50229     0.00     0.00  WriterImpl::flush()
  0.00      0.12     0.00    37788     0.00     0.00  std::_List_iterator<WriterHubImpl::ManageUnit>::operator++(int)
  0.00      0.12     0.00    30691     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const
  0.00      0.12     0.00    30184     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin()
  0.00      0.12     0.00    12424     0.00     0.00  WriterHubImpl::claim_opening_file()
  0.00      0.12     0.00    12415     0.00     0.00  WriterImpl::close_file()
  0.00      0.12     0.00    12412     0.00     0.00  WriterImpl::open_file()
  0.00      0.12     0.00    12278     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
  0.00      0.12     0.00     7403     0.00     0.00  std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&) const
  0.00      0.12     0.00     6169     0.00     0.00  std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator++()
  0.00      0.12     0.00     6149     0.00     0.00  std::operator&(std::memory_order, std::__memory_order_modifier)
  0.00      0.12     0.00     6146     0.00     0.00  std::atomic_bool::operator bool() const
  0.00      0.12     0.00     6146     0.00     0.00  std::__atomic_base<bool>::load(std::memory_order) const
  0.00      0.12     0.00     6143     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00      0.12     0.00     6142     0.00     0.00  WriterHubImpl::maintain_fast_list()
  0.00      0.12     0.00     6141     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&)
  0.00      0.12     0.00     6139     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::count() const
  0.00      0.12     0.00     6138     0.00     0.00  void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      0.12     0.00     6138     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      0.12     0.00     6137     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      0.12     0.00     6137     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00      0.12     0.00     6137     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      0.12     0.00     6137     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00      0.12     0.00     6137     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      0.12     0.00     6137     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00      0.12     0.00     6136     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)
  0.00      0.12     0.00     6135     0.00     0.00  _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
  0.00      0.12     0.00     2467     0.00     0.00  std::_List_const_iterator<WriterHubImpl::ManageUnit>::_List_const_iterator(std::__detail::_List_node_base const*)
  0.00      0.12     0.00     1234     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() const
  0.00      0.12     0.00     1234     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const
  0.00      0.12     0.00     1234     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() const
  0.00      0.12     0.00     1234     0.00     0.00  std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::__distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::input_iterator_tag)
  0.00      0.12     0.00     1233     0.00     0.00  std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::iterator_category std::__iterator_category<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&)
  0.00      0.12     0.00     1233     0.00     0.00  std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>)
  0.00      0.12     0.00      614     0.00     0.00  WriterHubImpl::maintain_slow_list()
  0.00      0.12     0.00      554     0.00     0.00  WriterHubImpl::info(char const*, ...)
  0.00      0.12     0.00      124     0.00     0.00  WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&)
  0.00      0.12     0.00      122     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator()
  0.00      0.12     0.00      120     0.00     0.00  WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&)
  0.00      0.12     0.00       79     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.12     0.00       61     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::deallocate(std::_List_node<WriterHubImpl::ManageUnit>*, unsigned long)
  0.00      0.12     0.00       61     0.00     0.00  void __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::destroy<std::_List_node<WriterHubImpl::ManageUnit> >(std::_List_node<WriterHubImpl::ManageUnit>*)
  0.00      0.12     0.00       61     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocate(unsigned long, void const*)
  0.00      0.12     0.00       61     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::max_size() const
  0.00      0.12     0.00       61     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_node()
  0.00      0.12     0.00       61     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_put_node(std::_List_node<WriterHubImpl::ManageUnit>*)
  0.00      0.12     0.00       51     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
  0.00      0.12     0.00       50     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char>(char*)
  0.00      0.12     0.00       50     0.00     0.00  std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
  0.00      0.12     0.00       50     0.00     0.00  std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
  0.00      0.12     0.00       50     0.00     0.00  std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
  0.00      0.12     0.00       42     0.00     0.00  std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&)
  0.00      0.12     0.00       31     0.00     0.00  _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_
  0.00      0.12     0.00       31     0.00     0.00  _ZNSt10_List_nodeIN13WriterHubImpl10ManageUnitEEC1IJRKS1_EEEDpOT_
  0.00      0.12     0.00       31     0.00     0.00  std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&)
  0.00      0.12     0.00       31     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>)
  0.00      0.12     0.00       31     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>)
  0.00      0.12     0.00       31     0.00     0.00  _ZNSt4listIN13WriterHubImpl10ManageUnitESaIS1_EE9_M_insertIJRKS1_EEEvSt14_List_iteratorIS1_EDpOT_
  0.00      0.12     0.00       31     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&)
  0.00      0.12     0.00       30     0.00     0.00  WriterImpl::create_buffer()
  0.00      0.12     0.00       30     0.00     0.00  WriterImpl::WriterImpl(int, std::string const&, fatwriter::Logger*)
  0.00      0.12     0.00       30     0.00     0.00  WriterImpl::~WriterImpl()
  0.00      0.12     0.00       30     0.00     0.00  WriterImpl::~WriterImpl()
  0.00      0.12     0.00       30     0.00     0.00  WriterHubImpl::create(std::string const&)
  0.00      0.12     0.00       30     0.00     0.00  _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_
  0.00      0.12     0.00       30     0.00     0.00  fatwriter::Writer::Writer()
  0.00      0.12     0.00       30     0.00     0.00  fatwriter::Writer::~Writer()
  0.00      0.12     0.00       30     0.00     0.00  std::_List_node<WriterHubImpl::ManageUnit>::_List_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&)
  0.00      0.12     0.00       30     0.00     0.00  std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&)
  0.00      0.12     0.00       30     0.00     0.00  void std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_insert<WriterHubImpl::ManageUnit>(std::_List_iterator<WriterHubImpl::ManageUnit>, WriterHubImpl::ManageUnit&&)
  0.00      0.12     0.00       30     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&)
  0.00      0.12     0.00       30     0.00     0.00  std::remove_reference<WriterHubImpl::ManageUnit&>::type&& std::move<WriterHubImpl::ManageUnit&>(WriterHubImpl::ManageUnit&&&)
  0.00      0.12     0.00       24     0.00     0.00  WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&)
  0.00      0.12     0.00       15     0.00     0.00  std::thread::id::id()
  0.00      0.12     0.00       12     0.00     0.00  __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~new_allocator()
  0.00      0.12     0.00       12     0.00     0.00  std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator()
  0.00      0.12     0.00       12     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_init()
  0.00      0.12     0.00       12     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear()
  0.00      0.12     0.00       10     0.00     0.00  std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base()
  0.00      0.12     0.00       10     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.00      0.12     0.00       10     0.00     0.00  void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...)
  0.00      0.12     0.00        9     0.00     0.00  __gthread_equal(unsigned long, unsigned long)
  0.00      0.12     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&)
  0.00      0.12     0.00        9     0.00     0.00  std::thread::joinable() const
  0.00      0.12     0.00        9     0.00     0.00  std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&)
  0.00      0.12     0.00        9     0.00     0.00  std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&&&)
  0.00      0.12     0.00        9     0.00     0.00  std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&& std::forward<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>(std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>::type&)
  0.00      0.12     0.00        9     0.00     0.00  std::operator==(std::thread::id, std::thread::id)
  0.00      0.12     0.00        7     0.00     0.00  WriterHubImpl::create_instance(int, int, int, std::string, std::string&)
  0.00      0.12     0.00        7     0.00     0.00  fatwriter::create_writer_hub(int, int, int, std::string, std::string&)
  0.00      0.12     0.00        7     0.00     0.00  std::shared_ptr<fatwriter::WriterHub>::shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*)
  0.00      0.12     0.00        7     0.00     0.00  std::__shared_ptr<fatwriter::WriterHub, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*)
  0.00      0.12     0.00        7     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<fatwriter::WriterHub*>(fatwriter::WriterHub*)
  0.00      0.12     0.00        7     0.00     0.00  std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      0.12     0.00        7     0.00     0.71  std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      0.12     0.00        7     0.00     0.00  std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(fatwriter::WriterHub*)
  0.00      0.12     0.00        7     0.00     0.00  std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
  0.00      0.12     0.00        7     0.00     0.00  std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
  0.00      0.12     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::new_allocator()
  0.00      0.12     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~new_allocator()
  0.00      0.12     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00      0.12     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00      0.12     0.00        6     0.00     0.00  std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocator()
  0.00      0.12     0.00        6     0.00     0.00  std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~allocator()
  0.00      0.12     0.00        6     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&)
  0.00      0.12     0.00        6     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00      0.12     0.00        6     0.00     0.00  std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&)
  0.00      0.12     0.00        6     0.00     0.00  std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_Head_base<{lambda()#1}, void>({lambda()#1}&&)
  0.00      0.12     0.00        6     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::_List_impl()
  0.00      0.12     0.00        6     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::~_List_impl()
  0.00      0.12     0.00        6     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_base()
  0.00      0.12     0.00        6     0.00     0.00  std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~_List_base()
  0.00      0.12     0.00        6     0.00     0.00  std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&)
  0.00      0.12     0.00        6     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.00      0.12     0.00        6     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::list()
  0.00      0.12     0.00        6     0.00     0.00  std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~list()
  0.00      0.12     0.00        6     0.00     0.00  std::thread::~thread()
  0.00      0.12     0.00        6     0.00     0.00  bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&)
  0.00      0.12     0.00        4     0.00     0.00  std::remove_reference<std::string&>::type&& std::move<std::string&>(std::string&&&)
  0.00      0.12     0.00        3     0.00     0.00  WriterHubImpl::WriterHubImpl(int, int, int, std::string)
  0.00      0.12     0.00        3     0.00     1.67  WriterHubImpl::~WriterHubImpl()
  0.00      0.12     0.00        3     0.00     1.67  WriterHubImpl::~WriterHubImpl()
  0.00      0.12     0.00        3     0.00     0.00  void __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*)
  0.00      0.12     0.00        3     0.00     0.00  _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_
  0.00      0.12     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator()
  0.00      0.12     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(__gnu_cxx::_Lock_policy*, unsigned long)
  0.00      0.12     0.00        3     0.00     0.00  void __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::destroy<__gnu_cxx::_Lock_policy>(__gnu_cxx::_Lock_policy*)
  0.00      0.12     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*)
  0.00      0.12     0.00        3     0.00     0.00  _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_
  0.00      0.12     0.00        3     0.00     0.00  fatwriter::Logger::Logger()
  0.00      0.12     0.00        3     0.00     0.00  fatwriter::WriterHub::WriterHub()
  0.00      0.12     0.00        3     0.00     0.00  fatwriter::WriterHub::~WriterHub()
  0.00      0.12     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const
  0.00      0.12     0.00        3     0.00     0.00  std::type_info::operator==(std::type_info const&) const
  0.00      0.12     0.00        3     0.00     0.00  std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator()
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl_base>::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&&)
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl_base>::~shared_ptr()
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~shared_ptr()
  0.00      0.12     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_tail(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&)
  0.00      0.12     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)
  0.00      0.12     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...)
  0.00      0.12     0.00        3     0.00     0.00  _ZNSt11_Tuple_implILm1EJEEC1Ev
  0.00      0.12     0.00        3     0.00     0.00  std::atomic_bool::atomic_bool(bool)
  0.00      0.12     0.00        3     0.00     0.00  std::atomic_bool::operator=(bool)
  0.00      0.12     0.00        3     0.00     2.82  void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>)
  0.00      0.12     0.00        3     0.00     0.00  std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple<, void>({lambda()#1}&&)
  0.00      0.12     0.00        3     0.00     0.00  std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     2.82  std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::operator()()
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.12     0.00        3     0.00     0.00  std::__atomic_base<bool>::store(bool, std::memory_order)
  0.00      0.12     0.00        3     0.00     0.00  std::__atomic_base<bool>::__atomic_base(bool)
  0.00      0.12     0.00        3     0.00     0.00  std::__atomic_base<bool>::operator=(bool)
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00      0.12     0.00        3     0.00     0.00  std::enable_if<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::value, void>::type std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::_S_destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper*)
  0.00      0.12     0.00        3     0.00     0.00  _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE12_S_constructIS7_IS6_EEENSt9enable_ifIXsrNS9_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS8_PSD_DpOSE_
  0.00      0.12     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*)
  0.00      0.12     0.00        3     0.00     0.00  _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE9constructIS7_IS6_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS8_PT_DpOSB_
  0.00      0.12     0.00        3     0.00     0.00  std::enable_if<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper<__gnu_cxx::_Lock_policy>::value, void>::type std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::_S_destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper*)
  0.00      0.12     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*, unsigned long)
  0.00      0.12     0.00        3     0.00     0.00  _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_
  0.00      0.12     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*)
  0.00      0.12     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, unsigned long)
  0.00      0.12     0.00        3     0.00     0.00  _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_
  0.00      0.12     0.00        3     0.00     0.00  std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
  0.00      0.12     0.00        3     0.00     0.00  std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >)
  0.00      0.12     0.00        3     0.00     0.00  std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00      0.12     0.00        3     0.00     0.00  std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00      0.12     0.00        3     0.00     0.00  std::_Maybe_wrap_member_pointer<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::__do_wrap({lambda()#1}&&)
  0.00      0.12     0.00        3     0.00     0.00  std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)
  0.00      0.12     0.00        3     0.00     0.00  std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple<{lambda()#1}, void>({lambda()#1}&&)
  0.00      0.12     0.00        3     0.00     0.00  std::atomic<bool>::atomic(bool)
  0.00      0.12     0.00        3     0.00     0.00  std::thread::_Impl_base::_Impl_base()
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::thread::_M_make_routine<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl&&)
  0.00      0.12     0.00        3     0.00     0.00  std::thread::swap(std::thread&)
  0.00      0.12     0.00        3     0.00     0.00  std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::~_Impl()
  0.00      0.12     0.00        3     0.00     0.00  std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)
  0.00      0.12     0.00        3     0.00     0.00  std::thread::thread()
  0.00      0.12     0.00        3     0.00     0.00  std::thread::operator=(std::thread&&)
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::__add_ref<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type std::__get_helper<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Tuple_impl<0ul, std::__add_ref>&)
  0.00      0.12     0.00        3     0.00     0.00  std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...)
  0.00      0.12     0.00        3     0.00     0.00  std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::allocate_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)())
  0.00      0.12     0.00        3     0.00     0.00  std::__add_ref<std::tuple_element<0ul, std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}> >::type>::type std::get<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>&)
  0.00      0.12     0.00        3     0.00     0.00  std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>::type&& std::move<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>(std::remove_reference&&)
  0.00      0.12     0.00        3     0.00     0.00  std::remove_reference<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>::type&& std::move<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>(std::remove_reference&&)
  0.00      0.12     0.00        3     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&&&)
  0.00      0.12     0.00        3     0.00     0.00  std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>::type&& std::move<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>(std::remove_reference&&)
  0.00      0.12     0.00        3     0.00     0.00  void std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
  0.00      0.12     0.00        3     0.00     2.82  WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const
  0.00      0.12     0.00        2     0.00     0.00  std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  0.00      0.12     0.00        2     0.00     0.00  char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&)
  0.00      0.12     0.00        2     0.00     0.00  char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
  0.00      0.12     0.00        2     0.00     0.00  char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type)
  0.00      0.12     0.00        2     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&)
  0.00      0.12     0.00        2     0.00     0.00  std::to_string(int)
  0.00      0.12     0.00        2     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*)
  0.00      0.12     0.00        2     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
  0.00      0.12     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      0.12     0.00        1     0.00     0.00  std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 8.33% of 0.12 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     63.8    0.05    0.03                 std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >::_M_run() [1]
                0.02    0.01   95322/95322       WriterImpl::printf(char const*, ...) [2]
-----------------------------------------------
                0.02    0.01   95322/95322       std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >::_M_run() [1]
[2]     22.1    0.02    0.01   95322         WriterImpl::printf(char const*, ...) [2]
                0.01    0.00   95072/145302      std::lock_guard<std::mutex>::lock_guard(std::mutex&) [4]
                0.00    0.00   95212/145431      std::lock_guard<std::mutex>::~lock_guard() [36]
                0.00    0.00     164/554         WriterHubImpl::info(char const*, ...) [75]
-----------------------------------------------
                                                 <spontaneous>
[3]     10.1    0.01    0.00                 fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string) [3]
                0.00    0.00       3/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [12]
                0.00    0.00      30/30          WriterHubImpl::create(std::string const&) [103]
                0.00    0.00       3/7           fatwriter::create_writer_hub(int, int, int, std::string, std::string&) [129]
                0.00    0.00       3/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [133]
-----------------------------------------------
                0.00    0.00   50230/145302      WriterImpl::flush() [18]
                0.01    0.00   95072/145302      WriterImpl::printf(char const*, ...) [2]
[4]      8.3    0.01    0.00  145302         std::lock_guard<std::mutex>::lock_guard(std::mutex&) [4]
                0.00    0.00  145362/152120      std::mutex::lock() [35]
-----------------------------------------------
                                                 <spontaneous>
[5]      8.3    0.01    0.00                 WriterImpl::release_buffer() [5]
-----------------------------------------------
                0.00    0.01       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::operator()() [7]
[6]      7.0    0.00    0.01       3         void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>) [6]
                0.00    0.01       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
                0.00    0.00       3/3           std::__add_ref<std::tuple_element<0ul, std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}> >::type>::type std::get<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>&) [226]
                0.00    0.00       3/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
-----------------------------------------------
                0.00    0.01       3/3           std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_M_run() [9]
[7]      7.0    0.00    0.01       3         std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::operator()() [7]
                0.00    0.01       3/3           void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>) [6]
-----------------------------------------------
                0.00    0.01       3/3           void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>) [6]
[8]      7.0    0.00    0.01       3         WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
                0.00    0.01    6142/6142        WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00     614/614         WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00    6146/6146        std::atomic_bool::operator bool() const [53]
                0.00    0.00    6143/152120      std::mutex::lock() [35]
                0.00    0.00    6143/152276      std::mutex::unlock() [32]
                0.00    0.00    6141/6141        std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&) [56]
                0.00    0.00    6138/6138        void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [58]
                0.00    0.00    1228/1234        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [70]
                0.00    0.00     384/554         WriterHubImpl::info(char const*, ...) [75]
-----------------------------------------------
                                                 <spontaneous>
[9]      7.0    0.00    0.01                 std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_M_run() [9]
                0.00    0.01       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::operator()() [7]
-----------------------------------------------
                0.00    0.01    6142/6142        WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[10]     6.5    0.00    0.01    6142         WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00  127538/136645      std::_List_iterator<WriterHubImpl::ManageUnit>::operator->() const [11]
                0.00    0.00   46169/50229       WriterImpl::flush() [18]
                0.00    0.00   41344/176125      std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const [31]
                0.00    0.00   41334/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00   35183/37788       std::_List_iterator<WriterHubImpl::ManageUnit>::operator++(int) [43]
                0.00    0.00   10990/12424       WriterHubImpl::claim_opening_file() [46]
                0.00    0.00   10977/12412       WriterImpl::open_file() [48]
                0.00    0.00    6140/30184       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() [45]
                0.00    0.00      11/111166      std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const [39]
                0.00    0.00      11/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&) [98]
                0.00    0.00      11/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [95]
-----------------------------------------------
                0.00    0.00    9107/136645      WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00  127538/136645      WriterHubImpl::maintain_fast_list() [10]
[11]     4.2    0.01    0.00  136645         std::_List_iterator<WriterHubImpl::ManageUnit>::operator->() const [11]
                0.00    0.00  136649/136649      WriterHubImpl::ManageUnit* std::__addressof<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&) [37]
-----------------------------------------------
                0.00    0.00       3/7           fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string) [3]
                0.00    0.00       4/7           fatwriter_wrong_init_Test::TestBody() [19]
[12]     4.2    0.00    0.01       7         std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [12]
                0.00    0.01       3/3           WriterHubImpl::~WriterHubImpl() [14]
-----------------------------------------------
                0.01    0.00       6/6           WriterHubImpl::~WriterHubImpl() [15]
[13]     4.2    0.01    0.00       6         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::clear() [13]
                0.00    0.00       6/12          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [117]
                0.00    0.00       6/12          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_init() [116]
-----------------------------------------------
                0.00    0.01       3/3           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [12]
[14]     4.2    0.00    0.01       3         WriterHubImpl::~WriterHubImpl() [14]
                0.00    0.01       3/3           WriterHubImpl::~WriterHubImpl() [15]
-----------------------------------------------
                0.00    0.01       3/3           WriterHubImpl::~WriterHubImpl() [14]
[15]     4.2    0.00    0.01       3         WriterHubImpl::~WriterHubImpl() [15]
                0.01    0.00       6/6           std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::clear() [13]
                0.00    0.00      36/176125      std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const [31]
                0.00    0.00      30/111166      std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const [39]
                0.00    0.00      30/30          WriterImpl::~WriterImpl() [101]
                0.00    0.00      30/108114      std::_List_iterator<WriterHubImpl::ManageUnit>::operator++() [40]
                0.00    0.00       6/1234        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [70]
                0.00    0.00       6/30184       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() [45]
                0.00    0.00       6/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00       6/6           std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~list() [154]
                0.00    0.00       3/3           std::atomic_bool::operator=(bool) [182]
                0.00    0.00       3/554         WriterHubImpl::info(char const*, ...) [75]
                0.00    0.00       3/6           std::thread::~thread() [155]
                0.00    0.00       3/3           fatwriter::WriterHub::~WriterHub() [168]
-----------------------------------------------
                                                 <spontaneous>
[16]     4.2    0.01    0.00                 std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, std::allocator<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [16]
-----------------------------------------------
                                                 <spontaneous>
[17]     4.2    0.01    0.00                 std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, std::allocator<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [17]
-----------------------------------------------
                0.00    0.00    4060/50229       WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00   46169/50229       WriterHubImpl::maintain_fast_list() [10]
[18]     2.9    0.00    0.00   50229         WriterImpl::flush() [18]
                0.00    0.00   50230/145302      std::lock_guard<std::mutex>::lock_guard(std::mutex&) [4]
                0.00    0.00   50219/145431      std::lock_guard<std::mutex>::~lock_guard() [36]
-----------------------------------------------
                                                 <spontaneous>
[19]     2.4    0.00    0.00                 fatwriter_wrong_init_Test::TestBody() [19]
                0.00    0.00       4/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [12]
                0.00    0.00       4/7           fatwriter::create_writer_hub(int, int, int, std::string, std::string&) [129]
                0.00    0.00       4/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [133]
-----------------------------------------------
                0.00    0.00     614/614         WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[20]     0.5    0.00    0.00     614         WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00    9107/136645      std::_List_iterator<WriterHubImpl::ManageUnit>::operator->() const [11]
                0.00    0.00    4060/50229       WriterImpl::flush() [18]
                0.00    0.00    3239/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00    3239/176125      std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const [31]
                0.00    0.00    2605/37788       std::_List_iterator<WriterHubImpl::ManageUnit>::operator++(int) [43]
                0.00    0.00    1435/12412       WriterImpl::open_file() [48]
                0.00    0.00    1434/12424       WriterHubImpl::claim_opening_file() [46]
                0.00    0.00     614/30184       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() [45]
                0.00    0.00     213/111331      WriterImpl::is_file_open() [38]
                0.00    0.00      20/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&) [98]
                0.00    0.00      20/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [95]
                0.00    0.00      19/111166      std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const [39]
-----------------------------------------------
                0.00    0.00  152219/304519      __gthread_mutex_lock(pthread_mutex_t*) [34]
                0.00    0.00  152300/304519      __gthread_mutex_unlock(pthread_mutex_t*) [33]
[30]     0.0    0.00    0.00  304519         __gthread_active_p() [30]
-----------------------------------------------
                0.00    0.00      36/176125      WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00    3239/176125      WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00   41344/176125      WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00  131506/176125      WriterHubImpl::claim_opening_file() [46]
[31]     0.0    0.00    0.00  176125         std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const [31]
-----------------------------------------------
                0.00    0.00      30/152276      WriterHubImpl::create(std::string const&) [103]
                0.00    0.00      30/152276      WriterImpl::~WriterImpl() [102]
                0.00    0.00     555/152276      WriterHubImpl::info(char const*, ...) [75]
                0.00    0.00    6143/152276      WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
                0.00    0.00  145518/152276      std::lock_guard<std::mutex>::~lock_guard() [36]
[32]     0.0    0.00    0.00  152276         std::mutex::unlock() [32]
                0.00    0.00  152259/152259      __gthread_mutex_unlock(pthread_mutex_t*) [33]
-----------------------------------------------
                0.00    0.00  152259/152259      std::mutex::unlock() [32]
[33]     0.0    0.00    0.00  152259         __gthread_mutex_unlock(pthread_mutex_t*) [33]
                0.00    0.00  152300/304519      __gthread_active_p() [30]
-----------------------------------------------
                0.00    0.00  152234/152234      std::mutex::lock() [35]
[34]     0.0    0.00    0.00  152234         __gthread_mutex_lock(pthread_mutex_t*) [34]
                0.00    0.00  152219/304519      __gthread_active_p() [30]
-----------------------------------------------
                0.00    0.00      30/152120      WriterHubImpl::create(std::string const&) [103]
                0.00    0.00      30/152120      WriterImpl::~WriterImpl() [102]
                0.00    0.00     555/152120      WriterHubImpl::info(char const*, ...) [75]
                0.00    0.00    6143/152120      WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
                0.00    0.00  145362/152120      std::lock_guard<std::mutex>::lock_guard(std::mutex&) [4]
[35]     0.0    0.00    0.00  152120         std::mutex::lock() [35]
                0.00    0.00  152234/152234      __gthread_mutex_lock(pthread_mutex_t*) [34]
-----------------------------------------------
                0.00    0.00   50219/145431      WriterImpl::flush() [18]
                0.00    0.00   95212/145431      WriterImpl::printf(char const*, ...) [2]
[36]     0.0    0.00    0.00  145431         std::lock_guard<std::mutex>::~lock_guard() [36]
                0.00    0.00  145518/152276      std::mutex::unlock() [32]
-----------------------------------------------
                0.00    0.00  136649/136649      std::_List_iterator<WriterHubImpl::ManageUnit>::operator->() const [11]
[37]     0.0    0.00    0.00  136649         WriterHubImpl::ManageUnit* std::__addressof<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&) [37]
-----------------------------------------------
                0.00    0.00     213/111331      WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00  111118/111331      WriterHubImpl::claim_opening_file() [46]
[38]     0.0    0.00    0.00  111331         WriterImpl::is_file_open() [38]
-----------------------------------------------
                0.00    0.00      11/111166      WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00      19/111166      WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00      30/111166      WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00  111106/111166      WriterHubImpl::claim_opening_file() [46]
[39]     0.0    0.00    0.00  111166         std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const [39]
-----------------------------------------------
                0.00    0.00      30/108114      WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00  108084/108114      WriterHubImpl::claim_opening_file() [46]
[40]     0.0    0.00    0.00  108114         std::_List_iterator<WriterHubImpl::ManageUnit>::operator++() [40]
-----------------------------------------------
                0.00    0.00      31/98275       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [95]
                0.00    0.00   30184/98275       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() [45]
                0.00    0.00   68060/98275       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
[41]     0.0    0.00    0.00   98275         std::_List_iterator<WriterHubImpl::ManageUnit>::_List_iterator(std::__detail::_List_node_base*) [41]
-----------------------------------------------
                0.00    0.00       6/68060       WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00      30/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&) [110]
                0.00    0.00      31/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&) [98]
                0.00    0.00    3239/68060       WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00   23420/68060       WriterHubImpl::claim_opening_file() [46]
                0.00    0.00   41334/68060       WriterHubImpl::maintain_fast_list() [10]
[42]     0.0    0.00    0.00   68060         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00   68060/98275       std::_List_iterator<WriterHubImpl::ManageUnit>::_List_iterator(std::__detail::_List_node_base*) [41]
-----------------------------------------------
                0.00    0.00    2605/37788       WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00   35183/37788       WriterHubImpl::maintain_fast_list() [10]
[43]     0.0    0.00    0.00   37788         std::_List_iterator<WriterHubImpl::ManageUnit>::operator++(int) [43]
-----------------------------------------------
                0.00    0.00    6137/30691       std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [64]
                0.00    0.00    6137/30691       std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [65]
                0.00    0.00    6141/30691       std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [59]
                0.00    0.00   12276/30691       _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ [67]
[44]     0.0    0.00    0.00   30691         std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [44]
-----------------------------------------------
                0.00    0.00       6/30184       WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00     614/30184       WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00    6140/30184       WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00   23424/30184       WriterHubImpl::claim_opening_file() [46]
[45]     0.0    0.00    0.00   30184         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() [45]
                0.00    0.00   30184/98275       std::_List_iterator<WriterHubImpl::ManageUnit>::_List_iterator(std::__detail::_List_node_base*) [41]
-----------------------------------------------
                0.00    0.00    1434/12424       WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00   10990/12424       WriterHubImpl::maintain_fast_list() [10]
[46]     0.0    0.00    0.00   12424         WriterHubImpl::claim_opening_file() [46]
                0.00    0.00  131506/176125      std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const [31]
                0.00    0.00  111118/111331      WriterImpl::is_file_open() [38]
                0.00    0.00  111106/111166      std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const [39]
                0.00    0.00  108084/108114      std::_List_iterator<WriterHubImpl::ManageUnit>::operator++() [40]
                0.00    0.00   23424/30184       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() [45]
                0.00    0.00   23420/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00   12415/12415       WriterImpl::close_file() [47]
-----------------------------------------------
                0.00    0.00   12415/12415       WriterHubImpl::claim_opening_file() [46]
[47]     0.0    0.00    0.00   12415         WriterImpl::close_file() [47]
-----------------------------------------------
                0.00    0.00    1435/12412       WriterHubImpl::maintain_slow_list() [20]
                0.00    0.00   10977/12412       WriterHubImpl::maintain_fast_list() [10]
[48]     0.0    0.00    0.00   12412         WriterImpl::open_file() [48]
-----------------------------------------------
                0.00    0.00    6139/12278       std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [63]
                0.00    0.00    6139/12278       _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ [67]
[49]     0.0    0.00    0.00   12278         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [49]
-----------------------------------------------
                0.00    0.00    7403/7403        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::__distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::input_iterator_tag) [72]
[50]     0.0    0.00    0.00    7403         std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&) const [50]
-----------------------------------------------
                0.00    0.00    6169/6169        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::__distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::input_iterator_tag) [72]
[51]     0.0    0.00    0.00    6169         std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator++() [51]
-----------------------------------------------
                0.00    0.00       3/6149        std::__atomic_base<bool>::store(bool, std::memory_order) [189]
                0.00    0.00    6146/6149        std::__atomic_base<bool>::load(std::memory_order) const [54]
[52]     0.0    0.00    0.00    6149         std::operator&(std::memory_order, std::__memory_order_modifier) [52]
-----------------------------------------------
                0.00    0.00    6146/6146        WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[53]     0.0    0.00    0.00    6146         std::atomic_bool::operator bool() const [53]
                0.00    0.00    6146/6146        std::__atomic_base<bool>::load(std::memory_order) const [54]
-----------------------------------------------
                0.00    0.00    6146/6146        std::atomic_bool::operator bool() const [53]
[54]     0.0    0.00    0.00    6146         std::__atomic_base<bool>::load(std::memory_order) const [54]
                0.00    0.00    6146/6149        std::operator&(std::memory_order, std::__memory_order_modifier) [52]
-----------------------------------------------
                0.00    0.00    6143/6143        std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [59]
[55]     0.0    0.00    0.00    6143         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [55]
-----------------------------------------------
                0.00    0.00    6141/6141        WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[56]     0.0    0.00    0.00    6141         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&) [56]
-----------------------------------------------
                0.00    0.00    6139/6139        std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [63]
[57]     0.0    0.00    0.00    6139         std::chrono::duration<long, std::ratio<1l, 1l> >::count() const [57]
-----------------------------------------------
                0.00    0.00    6138/6138        WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[58]     0.0    0.00    0.00    6138         void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [58]
                0.00    0.00    6137/6137        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [62]
                0.00    0.00    6137/6137        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [60]
                0.00    0.00    6135/6135        _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ [67]
-----------------------------------------------
                0.00    0.00    6138/6138        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [60]
[59]     0.0    0.00    0.00    6138         std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [59]
                0.00    0.00    6143/6143        std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [55]
                0.00    0.00    6141/30691       std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [44]
-----------------------------------------------
                0.00    0.00    6137/6137        void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [58]
[60]     0.0    0.00    0.00    6137         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [60]
                0.00    0.00    6138/6138        std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [59]
-----------------------------------------------
                0.00    0.00    6137/6137        std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [65]
[61]     0.0    0.00    0.00    6137         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [61]
                0.00    0.00    6137/6137        std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [63]
-----------------------------------------------
                0.00    0.00    6137/6137        void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [58]
[62]     0.0    0.00    0.00    6137         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [62]
                0.00    0.00    6137/6137        std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [64]
-----------------------------------------------
                0.00    0.00    6137/6137        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [61]
[63]     0.0    0.00    0.00    6137         std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [63]
                0.00    0.00    6139/6139        std::chrono::duration<long, std::ratio<1l, 1l> >::count() const [57]
                0.00    0.00    6139/12278       std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [49]
-----------------------------------------------
                0.00    0.00    6137/6137        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [62]
[64]     0.0    0.00    0.00    6137         std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [64]
                0.00    0.00    6137/30691       std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [44]
                0.00    0.00    6136/6136        std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&) [66]
-----------------------------------------------
                0.00    0.00    6137/6137        _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ [67]
[65]     0.0    0.00    0.00    6137         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [65]
                0.00    0.00    6137/6137        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [61]
                0.00    0.00    6137/30691       std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [44]
-----------------------------------------------
                0.00    0.00    6136/6136        std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [64]
[66]     0.0    0.00    0.00    6136         std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&) [66]
-----------------------------------------------
                0.00    0.00    6135/6135        void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [58]
[67]     0.0    0.00    0.00    6135         _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_ [67]
                0.00    0.00   12276/30691       std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [44]
                0.00    0.00    6139/12278       std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&) [49]
                0.00    0.00    6137/6137        std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [65]
-----------------------------------------------
                0.00    0.00    1233/2467        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() const [71]
                0.00    0.00    1234/2467        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() const [69]
[68]     0.0    0.00    0.00    2467         std::_List_const_iterator<WriterHubImpl::ManageUnit>::_List_const_iterator(std::__detail::_List_node_base const*) [68]
-----------------------------------------------
                0.00    0.00    1234/1234        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [70]
[69]     0.0    0.00    0.00    1234         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() const [69]
                0.00    0.00    1234/2467        std::_List_const_iterator<WriterHubImpl::ManageUnit>::_List_const_iterator(std::__detail::_List_node_base const*) [68]
-----------------------------------------------
                0.00    0.00       6/1234        WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00    1228/1234        WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[70]     0.0    0.00    0.00    1234         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [70]
                0.00    0.00    1234/1234        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() const [69]
                0.00    0.00    1234/1234        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() const [71]
                0.00    0.00    1233/1233        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>) [74]
-----------------------------------------------
                0.00    0.00    1234/1234        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [70]
[71]     0.0    0.00    0.00    1234         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() const [71]
                0.00    0.00    1233/2467        std::_List_const_iterator<WriterHubImpl::ManageUnit>::_List_const_iterator(std::__detail::_List_node_base const*) [68]
-----------------------------------------------
                0.00    0.00    1234/1234        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>) [74]
[72]     0.0    0.00    0.00    1234         std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::__distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::input_iterator_tag) [72]
                0.00    0.00    7403/7403        std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&) const [50]
                0.00    0.00    6169/6169        std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator++() [51]
-----------------------------------------------
                0.00    0.00    1233/1233        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>) [74]
[73]     0.0    0.00    0.00    1233         std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::iterator_category std::__iterator_category<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&) [73]
-----------------------------------------------
                0.00    0.00    1233/1233        std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [70]
[74]     0.0    0.00    0.00    1233         std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>) [74]
                0.00    0.00    1234/1234        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::__distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::input_iterator_tag) [72]
                0.00    0.00    1233/1233        std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::iterator_category std::__iterator_category<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&) [73]
-----------------------------------------------
                0.00    0.00       3/554         WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
                0.00    0.00       3/554         WriterHubImpl::~WriterHubImpl() [15]
                0.00    0.00     164/554         WriterImpl::printf(char const*, ...) [2]
                0.00    0.00     384/554         WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const [8]
[75]     0.0    0.00    0.00     554         WriterHubImpl::info(char const*, ...) [75]
                0.00    0.00     555/152120      std::mutex::lock() [35]
                0.00    0.00     555/152276      std::mutex::unlock() [32]
-----------------------------------------------
                0.00    0.00      31/124         _ZNSt4listIN13WriterHubImpl10ManageUnitESaIS1_EE9_M_insertIJRKS1_EEEvSt14_List_iteratorIS1_EDpOT_ [97]
                0.00    0.00      31/124         std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&) [94]
                0.00    0.00      31/124         _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_ [92]
                0.00    0.00      31/124         _ZNSt10_List_nodeIN13WriterHubImpl10ManageUnitEEC1IJRKS1_EEEDpOT_ [93]
[76]     0.0    0.00    0.00     124         WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&) [76]
-----------------------------------------------
                0.00    0.00      30/122         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [117]
                0.00    0.00      30/122         std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [108]
                0.00    0.00      31/122         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [96]
                0.00    0.00      31/122         std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&) [94]
[77]     0.0    0.00    0.00     122         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator() [77]
-----------------------------------------------
                0.00    0.00      30/120         void std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_insert<WriterHubImpl::ManageUnit>(std::_List_iterator<WriterHubImpl::ManageUnit>, WriterHubImpl::ManageUnit&&) [109]
                0.00    0.00      30/120         std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [108]
                0.00    0.00      30/120         _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_ [104]
                0.00    0.00      30/120         std::_List_node<WriterHubImpl::ManageUnit>::_List_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [107]
[78]     0.0    0.00    0.00     120         WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&) [78]
-----------------------------------------------
                0.00    0.00       1/79          __gnu_cxx::new_allocator<std::string>::construct(std::string*, std::string const&) [1138]
                0.00    0.00       1/79          __gnu_cxx::new_allocator<testing::TestEventListener*>::construct(testing::TestEventListener**, testing::TestEventListener* const&) [1111]
                0.00    0.00       1/79          __gnu_cxx::new_allocator<testing::TestCase*>::construct(testing::TestCase**, testing::TestCase* const&) [1117]
                0.00    0.00       3/79          _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
                0.00    0.00       3/79          _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_ [160]
                0.00    0.00       4/79          __gnu_cxx::new_allocator<testing::TestInfo*>::construct(testing::TestInfo**, testing::TestInfo* const&) [1123]
                0.00    0.00       5/79          __gnu_cxx::new_allocator<int>::construct(int*, int const&) [1180]
                0.00    0.00      30/79          _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_ [104]
                0.00    0.00      31/79          _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_ [92]
[79]     0.0    0.00    0.00      79         operator new(unsigned long, void*) [79]
-----------------------------------------------
                0.00    0.00      61/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_put_node(std::_List_node<WriterHubImpl::ManageUnit>*) [85]
[80]     0.0    0.00    0.00      61         __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::deallocate(std::_List_node<WriterHubImpl::ManageUnit>*, unsigned long) [80]
-----------------------------------------------
                0.00    0.00      30/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [117]
                0.00    0.00      31/61          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [96]
[81]     0.0    0.00    0.00      61         void __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::destroy<std::_List_node<WriterHubImpl::ManageUnit> >(std::_List_node<WriterHubImpl::ManageUnit>*) [81]
-----------------------------------------------
                0.00    0.00      61/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_node() [84]
[82]     0.0    0.00    0.00      61         __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocate(unsigned long, void const*) [82]
                0.00    0.00      61/61          __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::max_size() const [83]
-----------------------------------------------
                0.00    0.00      61/61          __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocate(unsigned long, void const*) [82]
[83]     0.0    0.00    0.00      61         __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::max_size() const [83]
-----------------------------------------------
                0.00    0.00      30/61          std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [108]
                0.00    0.00      31/61          std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&) [94]
[84]     0.0    0.00    0.00      61         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_node() [84]
                0.00    0.00      61/61          __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocate(unsigned long, void const*) [82]
-----------------------------------------------
                0.00    0.00      30/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [117]
                0.00    0.00      31/61          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [96]
[85]     0.0    0.00    0.00      61         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_put_node(std::_List_node<WriterHubImpl::ManageUnit>*) [85]
                0.00    0.00      61/61          __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::deallocate(std::_List_node<WriterHubImpl::ManageUnit>*, unsigned long) [80]
-----------------------------------------------
                0.00    0.00       3/51          WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
                0.00    0.00      48/51          testing::Message::Message() [402]
[86]     0.0    0.00    0.00      51         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [86]
-----------------------------------------------
                0.00    0.00      50/50          char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [234]
[87]     0.0    0.00    0.00      50         bool __gnu_cxx::__is_null_pointer<char>(char*) [87]
-----------------------------------------------
                0.00    0.00      50/50          std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [90]
[88]     0.0    0.00    0.00      50         std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [88]
-----------------------------------------------
                0.00    0.00      50/50          std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [90]
[89]     0.0    0.00    0.00      50         std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [89]
-----------------------------------------------
                0.00    0.00      50/50          char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [234]
[90]     0.0    0.00    0.00      50         std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [90]
                0.00    0.00      50/50          std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&) [89]
                0.00    0.00      50/50          std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag) [88]
-----------------------------------------------
                0.00    0.00       3/42          std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::thread::_M_make_routine<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl&&) [215]
                0.00    0.00       3/42          std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [222]
                0.00    0.00       3/42          std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::allocate_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [225]
                0.00    0.00       3/42          std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [175]
                0.00    0.00       3/42          std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [187]
                0.00    0.00       3/42          std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
                0.00    0.00       3/42          _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_ [204]
                0.00    0.00       3/42          _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_ [201]
                0.00    0.00       3/42          _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
                0.00    0.00       3/42          std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
                0.00    0.00       3/42          _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE9constructIS7_IS6_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS8_PT_DpOSB_ [198]
                0.00    0.00       3/42          _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE12_S_constructIS7_IS6_EEENSt9enable_ifIXsrNS9_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS8_PSD_DpOSE_ [196]
                0.00    0.00       3/42          _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_ [160]
                0.00    0.00       3/42          std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [217]
[91]     0.0    0.00    0.00      42         std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
-----------------------------------------------
                0.00    0.00      31/31          std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&) [94]
[92]     0.0    0.00    0.00      31         _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_ [92]
                0.00    0.00      31/124         WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&) [76]
                0.00    0.00      31/79          operator new(unsigned long, void*) [79]
                0.00    0.00      31/31          _ZNSt10_List_nodeIN13WriterHubImpl10ManageUnitEEC1IJRKS1_EEEDpOT_ [93]
-----------------------------------------------
                0.00    0.00      31/31          _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_ [92]
[93]     0.0    0.00    0.00      31         _ZNSt10_List_nodeIN13WriterHubImpl10ManageUnitEEC1IJRKS1_EEEDpOT_ [93]
                0.00    0.00      31/124         WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&) [76]
-----------------------------------------------
                0.00    0.00      31/31          _ZNSt4listIN13WriterHubImpl10ManageUnitESaIS1_EE9_M_insertIJRKS1_EEEvSt14_List_iteratorIS1_EDpOT_ [97]
[94]     0.0    0.00    0.00      31         std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&) [94]
                0.00    0.00      31/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_node() [84]
                0.00    0.00      31/124         WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&) [76]
                0.00    0.00      31/122         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator() [77]
                0.00    0.00      31/31          _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_ [92]
-----------------------------------------------
                0.00    0.00      11/31          WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00      20/31          WriterHubImpl::maintain_slow_list() [20]
[95]     0.0    0.00    0.00      31         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [95]
                0.00    0.00      31/98275       std::_List_iterator<WriterHubImpl::ManageUnit>::_List_iterator(std::__detail::_List_node_base*) [41]
                0.00    0.00      31/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [96]
-----------------------------------------------
                0.00    0.00      31/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [95]
[96]     0.0    0.00    0.00      31         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>) [96]
                0.00    0.00      31/122         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator() [77]
                0.00    0.00      31/61          void __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::destroy<std::_List_node<WriterHubImpl::ManageUnit> >(std::_List_node<WriterHubImpl::ManageUnit>*) [81]
                0.00    0.00      31/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_put_node(std::_List_node<WriterHubImpl::ManageUnit>*) [85]
-----------------------------------------------
                0.00    0.00      31/31          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&) [98]
[97]     0.0    0.00    0.00      31         _ZNSt4listIN13WriterHubImpl10ManageUnitESaIS1_EE9_M_insertIJRKS1_EEEvSt14_List_iteratorIS1_EDpOT_ [97]
                0.00    0.00      31/124         WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&) [76]
                0.00    0.00      31/31          std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&) [94]
-----------------------------------------------
                0.00    0.00      11/31          WriterHubImpl::maintain_fast_list() [10]
                0.00    0.00      20/31          WriterHubImpl::maintain_slow_list() [20]
[98]     0.0    0.00    0.00      31         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&) [98]
                0.00    0.00      31/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00      31/31          _ZNSt4listIN13WriterHubImpl10ManageUnitESaIS1_EE9_M_insertIJRKS1_EEEvSt14_List_iteratorIS1_EDpOT_ [97]
-----------------------------------------------
                0.00    0.00      30/30          WriterImpl::WriterImpl(int, std::string const&, fatwriter::Logger*) [100]
[99]     0.0    0.00    0.00      30         WriterImpl::create_buffer() [99]
-----------------------------------------------
                0.00    0.00      30/30          WriterHubImpl::create(std::string const&) [103]
[100]    0.0    0.00    0.00      30         WriterImpl::WriterImpl(int, std::string const&, fatwriter::Logger*) [100]
                0.00    0.00      30/30          fatwriter::Writer::Writer() [105]
                0.00    0.00      30/30          WriterImpl::create_buffer() [99]
-----------------------------------------------
                0.00    0.00      30/30          WriterHubImpl::~WriterHubImpl() [15]
[101]    0.0    0.00    0.00      30         WriterImpl::~WriterImpl() [101]
                0.00    0.00      30/30          WriterImpl::~WriterImpl() [102]
-----------------------------------------------
                0.00    0.00      30/30          WriterImpl::~WriterImpl() [101]
[102]    0.0    0.00    0.00      30         WriterImpl::~WriterImpl() [102]
                0.00    0.00      30/152120      std::mutex::lock() [35]
                0.00    0.00      30/152276      std::mutex::unlock() [32]
                0.00    0.00      30/30          fatwriter::Writer::~Writer() [106]
-----------------------------------------------
                0.00    0.00      30/30          fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string) [3]
[103]    0.0    0.00    0.00      30         WriterHubImpl::create(std::string const&) [103]
                0.00    0.00      30/30          WriterImpl::WriterImpl(int, std::string const&, fatwriter::Logger*) [100]
                0.00    0.00      30/152120      std::mutex::lock() [35]
                0.00    0.00      30/30          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&) [110]
                0.00    0.00      30/152276      std::mutex::unlock() [32]
-----------------------------------------------
                0.00    0.00      30/30          std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [108]
[104]    0.0    0.00    0.00      30         _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_ [104]
                0.00    0.00      30/120         WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&) [78]
                0.00    0.00      30/79          operator new(unsigned long, void*) [79]
                0.00    0.00      30/30          std::_List_node<WriterHubImpl::ManageUnit>::_List_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [107]
-----------------------------------------------
                0.00    0.00      30/30          WriterImpl::WriterImpl(int, std::string const&, fatwriter::Logger*) [100]
[105]    0.0    0.00    0.00      30         fatwriter::Writer::Writer() [105]
-----------------------------------------------
                0.00    0.00      30/30          WriterImpl::~WriterImpl() [102]
[106]    0.0    0.00    0.00      30         fatwriter::Writer::~Writer() [106]
-----------------------------------------------
                0.00    0.00      30/30          _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_ [104]
[107]    0.0    0.00    0.00      30         std::_List_node<WriterHubImpl::ManageUnit>::_List_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [107]
                0.00    0.00      30/120         WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&) [78]
-----------------------------------------------
                0.00    0.00      30/30          void std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_insert<WriterHubImpl::ManageUnit>(std::_List_iterator<WriterHubImpl::ManageUnit>, WriterHubImpl::ManageUnit&&) [109]
[108]    0.0    0.00    0.00      30         std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [108]
                0.00    0.00      30/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_node() [84]
                0.00    0.00      30/120         WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&) [78]
                0.00    0.00      30/122         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator() [77]
                0.00    0.00      30/30          _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_ [104]
-----------------------------------------------
                0.00    0.00      30/30          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&) [110]
[109]    0.0    0.00    0.00      30         void std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_insert<WriterHubImpl::ManageUnit>(std::_List_iterator<WriterHubImpl::ManageUnit>, WriterHubImpl::ManageUnit&&) [109]
                0.00    0.00      30/120         WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&) [78]
                0.00    0.00      30/30          std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [108]
-----------------------------------------------
                0.00    0.00      30/30          WriterHubImpl::create(std::string const&) [103]
[110]    0.0    0.00    0.00      30         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&) [110]
                0.00    0.00      30/30          std::remove_reference<WriterHubImpl::ManageUnit&>::type&& std::move<WriterHubImpl::ManageUnit&>(WriterHubImpl::ManageUnit&&&) [111]
                0.00    0.00      30/68060       std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() [42]
                0.00    0.00      30/30          void std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_insert<WriterHubImpl::ManageUnit>(std::_List_iterator<WriterHubImpl::ManageUnit>, WriterHubImpl::ManageUnit&&) [109]
-----------------------------------------------
                0.00    0.00      30/30          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&) [110]
[111]    0.0    0.00    0.00      30         std::remove_reference<WriterHubImpl::ManageUnit&>::type&& std::move<WriterHubImpl::ManageUnit&>(WriterHubImpl::ManageUnit&&&) [111]
-----------------------------------------------
                0.00    0.00       3/24          std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
                0.00    0.00       3/24          std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
                0.00    0.00       3/24          std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...) [224]
                0.00    0.00       3/24          std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...) [179]
                0.00    0.00       3/24          std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple<{lambda()#1}, void>({lambda()#1}&&) [212]
                0.00    0.00       3/24          void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>) [6]
                0.00    0.00       6/24          std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_Head_base<{lambda()#1}, void>({lambda()#1}&&) [146]
[112]    0.0    0.00    0.00      24         WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
-----------------------------------------------
                0.00    0.00       3/15          std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
                0.00    0.00       3/15          std::thread::thread() [220]
                0.00    0.00       9/15          std::thread::joinable() const [123]
[113]    0.0    0.00    0.00      15         std::thread::id::id() [113]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() [115]
[114]    0.0    0.00    0.00      12         __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~new_allocator() [114]
-----------------------------------------------
                0.00    0.00       3/12          std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [222]
                0.00    0.00       3/12          _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
                0.00    0.00       3/12          std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [207]
                0.00    0.00       3/12          std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
[115]    0.0    0.00    0.00      12         std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() [115]
                0.00    0.00      12/12          __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~new_allocator() [114]
-----------------------------------------------
                0.00    0.00       6/12          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::clear() [13]
                0.00    0.00       6/12          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_base() [149]
[116]    0.0    0.00    0.00      12         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_init() [116]
-----------------------------------------------
                0.00    0.00       6/12          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~_List_base() [150]
                0.00    0.00       6/12          std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::clear() [13]
[117]    0.0    0.00    0.00      12         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [117]
                0.00    0.00      30/122         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator() [77]
                0.00    0.00      30/61          void __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::destroy<std::_List_node<WriterHubImpl::ManageUnit> >(std::_List_node<WriterHubImpl::ManageUnit>*) [81]
                0.00    0.00      30/61          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_put_node(std::_List_node<WriterHubImpl::ManageUnit>*) [85]
-----------------------------------------------
                0.00    0.00      10/10          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [119]
[118]    0.0    0.00    0.00      10         std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base() [118]
-----------------------------------------------
                0.00    0.00       3/10          std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
                0.00    0.00       7/10          std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(fatwriter::WriterHub*) [134]
[119]    0.0    0.00    0.00      10         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [119]
                0.00    0.00      10/10          std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base() [118]
-----------------------------------------------
                0.00    0.00       3/10          std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [187]
                0.00    0.00       7/10          std::__shared_ptr<fatwriter::WriterHub, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [131]
[120]    0.0    0.00    0.00      10         void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...) [120]
-----------------------------------------------
                0.00    0.00       9/9           std::operator==(std::thread::id, std::thread::id) [127]
[121]    0.0    0.00    0.00       9         __gthread_equal(unsigned long, unsigned long) [121]
-----------------------------------------------
                0.00    0.00       9/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [124]
[122]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [122]
-----------------------------------------------
                0.00    0.00       3/9           std::thread::operator=(std::thread&&) [221]
                0.00    0.00       6/9           std::thread::~thread() [155]
[123]    0.0    0.00    0.00       9         std::thread::joinable() const [123]
                0.00    0.00       9/15          std::thread::id::id() [113]
                0.00    0.00       9/9           std::operator==(std::thread::id, std::thread::id) [127]
-----------------------------------------------
                0.00    0.00       3/9           _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
                0.00    0.00       3/9           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
                0.00    0.00       3/9           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >) [206]
[124]    0.0    0.00    0.00       9         std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [124]
                0.00    0.00       9/9           __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [122]
-----------------------------------------------
                0.00    0.00       9/9           void std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [231]
[125]    0.0    0.00    0.00       9         std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&&&) [125]
-----------------------------------------------
                0.00    0.00       3/9           _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_ [204]
                0.00    0.00       3/9           _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_ [201]
                0.00    0.00       3/9           _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
[126]    0.0    0.00    0.00       9         std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&& std::forward<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>(std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>::type&) [126]
-----------------------------------------------
                0.00    0.00       9/9           std::thread::joinable() const [123]
[127]    0.0    0.00    0.00       9         std::operator==(std::thread::id, std::thread::id) [127]
                0.00    0.00       9/9           __gthread_equal(unsigned long, unsigned long) [121]
-----------------------------------------------
                0.00    0.00       7/7           fatwriter::create_writer_hub(int, int, int, std::string, std::string&) [129]
[128]    0.0    0.00    0.00       7         WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
                0.00    0.00       2/2           std::to_string(int) [237]
                0.00    0.00       2/2           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [239]
                0.00    0.00       2/2           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*) [238]
                0.00    0.00       1/1           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [241]
-----------------------------------------------
                0.00    0.00       3/7           fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string) [3]
                0.00    0.00       4/7           fatwriter_wrong_init_Test::TestBody() [19]
[129]    0.0    0.00    0.00       7         fatwriter::create_writer_hub(int, int, int, std::string, std::string&) [129]
                0.00    0.00       7/7           WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
                0.00    0.00       7/7           std::shared_ptr<fatwriter::WriterHub>::shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [130]
-----------------------------------------------
                0.00    0.00       7/7           fatwriter::create_writer_hub(int, int, int, std::string, std::string&) [129]
[130]    0.0    0.00    0.00       7         std::shared_ptr<fatwriter::WriterHub>::shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [130]
                0.00    0.00       7/7           std::__shared_ptr<fatwriter::WriterHub, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [131]
-----------------------------------------------
                0.00    0.00       7/7           std::shared_ptr<fatwriter::WriterHub>::shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [130]
[131]    0.0    0.00    0.00       7         std::__shared_ptr<fatwriter::WriterHub, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [131]
                0.00    0.00       7/7           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<fatwriter::WriterHub*>(fatwriter::WriterHub*) [132]
                0.00    0.00       7/10          void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...) [120]
-----------------------------------------------
                0.00    0.00       7/7           std::__shared_ptr<fatwriter::WriterHub, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [131]
[132]    0.0    0.00    0.00       7         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<fatwriter::WriterHub*>(fatwriter::WriterHub*) [132]
                0.00    0.00       7/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(fatwriter::WriterHub*) [134]
-----------------------------------------------
                0.00    0.00       3/7           fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string) [3]
                0.00    0.00       4/7           fatwriter_wrong_init_Test::TestBody() [19]
[133]    0.0    0.00    0.00       7         std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [133]
                0.00    0.00       7/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [135]
-----------------------------------------------
                0.00    0.00       7/7           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<fatwriter::WriterHub*>(fatwriter::WriterHub*) [132]
[134]    0.0    0.00    0.00       7         std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(fatwriter::WriterHub*) [134]
                0.00    0.00       7/10          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [119]
-----------------------------------------------
                0.00    0.00       7/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [133]
[135]    0.0    0.00    0.00       7         std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [135]
                0.00    0.00       7/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [136]
-----------------------------------------------
                0.00    0.00       7/7           std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [135]
[136]    0.0    0.00    0.00       7         std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [136]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocator() [141]
[137]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::new_allocator() [137]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~allocator() [142]
[138]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~new_allocator() [138]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [143]
[139]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [139]
-----------------------------------------------
                0.00    0.00       6/6           std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [144]
[140]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [140]
-----------------------------------------------
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::_List_impl() [147]
[141]    0.0    0.00    0.00       6         std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocator() [141]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::new_allocator() [137]
-----------------------------------------------
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::~_List_impl() [148]
[142]    0.0    0.00    0.00       6         std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~allocator() [142]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~new_allocator() [138]
-----------------------------------------------
                0.00    0.00       3/6           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
                0.00    0.00       3/6           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [1937]
[143]    0.0    0.00    0.00       6         std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [143]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [139]
-----------------------------------------------
                0.00    0.00       3/6           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
                0.00    0.00       3/6           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [1937]
[144]    0.0    0.00    0.00       6         std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [144]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [140]
-----------------------------------------------
                0.00    0.00       6/6           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [151]
[145]    0.0    0.00    0.00       6         std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [145]
-----------------------------------------------
                0.00    0.00       3/6           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
                0.00    0.00       3/6           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...) [179]
[146]    0.0    0.00    0.00       6         std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_Head_base<{lambda()#1}, void>({lambda()#1}&&) [146]
                0.00    0.00       6/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
-----------------------------------------------
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_base() [149]
[147]    0.0    0.00    0.00       6         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::_List_impl() [147]
                0.00    0.00       6/6           std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocator() [141]
-----------------------------------------------
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~_List_base() [150]
[148]    0.0    0.00    0.00       6         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::~_List_impl() [148]
                0.00    0.00       6/6           std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~allocator() [142]
-----------------------------------------------
                0.00    0.00       6/6           std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::list() [153]
[149]    0.0    0.00    0.00       6         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_base() [149]
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::_List_impl() [147]
                0.00    0.00       6/12          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_init() [116]
-----------------------------------------------
                0.00    0.00       6/6           std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~list() [154]
[150]    0.0    0.00    0.00       6         std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~_List_base() [150]
                0.00    0.00       6/12          std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [117]
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::~_List_impl() [148]
-----------------------------------------------
                0.00    0.00       3/6           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
                0.00    0.00       3/6           std::__add_ref<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type std::__get_helper<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Tuple_impl<0ul, std::__add_ref>&) [223]
[151]    0.0    0.00    0.00       6         std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [151]
                0.00    0.00       6/6           std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [145]
-----------------------------------------------
                0.00    0.00       3/6           std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [188]
                0.00    0.00       3/6           std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [186]
[152]    0.0    0.00    0.00       6         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [152]
-----------------------------------------------
                0.00    0.00       6/6           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[153]    0.0    0.00    0.00       6         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::list() [153]
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_base() [149]
-----------------------------------------------
                0.00    0.00       6/6           WriterHubImpl::~WriterHubImpl() [15]
[154]    0.0    0.00    0.00       6         std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~list() [154]
                0.00    0.00       6/6           std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~_List_base() [150]
-----------------------------------------------
                0.00    0.00       3/6           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
                0.00    0.00       3/6           WriterHubImpl::~WriterHubImpl() [15]
[155]    0.0    0.00    0.00       6         std::thread::~thread() [155]
                0.00    0.00       6/9           std::thread::joinable() const [123]
-----------------------------------------------
                0.00    0.00       6/6           char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [1696]
[156]    0.0    0.00    0.00       6         bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&) [156]
-----------------------------------------------
                0.00    0.00       2/4           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [239]
                0.00    0.00       2/4           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*) [238]
[157]    0.0    0.00    0.00       4         std::remove_reference<std::string&>::type&& std::move<std::string&>(std::string&&&) [157]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
[158]    0.0    0.00    0.00       3         WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
                0.00    0.00       6/6           std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::list() [153]
                0.00    0.00       3/3           fatwriter::WriterHub::WriterHub() [167]
                0.00    0.00       3/3           fatwriter::Logger::Logger() [166]
                0.00    0.00       3/3           std::thread::thread() [220]
                0.00    0.00       3/3           std::atomic<bool>::atomic(bool) [213]
                0.00    0.00       3/51          std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [86]
                0.00    0.00       3/554         WriterHubImpl::info(char const*, ...) [75]
                0.00    0.00       3/3           std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
                0.00    0.00       3/3           std::thread::operator=(std::thread&&) [221]
                0.00    0.00       3/6           std::thread::~thread() [155]
-----------------------------------------------
                0.00    0.00       3/3           std::enable_if<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::value, void>::type std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::_S_destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper*) [195]
[159]    0.0    0.00    0.00       3         void __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) [159]
                0.00    0.00       3/3           std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::~_Impl() [218]
-----------------------------------------------
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE12_S_constructIS7_IS6_EEENSt9enable_ifIXsrNS9_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS8_PSD_DpOSE_ [196]
[160]    0.0    0.00    0.00       3         _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_ [160]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/79          operator new(unsigned long, void*) [79]
                0.00    0.00       3/3           std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [217]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator() [172]
[161]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator() [161]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*, unsigned long) [200]
[162]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(__gnu_cxx::_Lock_policy*, unsigned long) [162]
-----------------------------------------------
                0.00    0.00       3/3           std::enable_if<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper<__gnu_cxx::_Lock_policy>::value, void>::type std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::_S_destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper*) [199]
[163]    0.0    0.00    0.00       3         void __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::destroy<__gnu_cxx::_Lock_policy>(__gnu_cxx::_Lock_policy*) [163]
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [209]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, unsigned long) [203]
[164]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [164]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const [169]
-----------------------------------------------
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_ [201]
[165]    0.0    0.00    0.00       3         _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
                0.00    0.00       3/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&& std::forward<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>(std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>::type&) [126]
                0.00    0.00       3/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [124]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/79          operator new(unsigned long, void*) [79]
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
                0.00    0.00       3/12          std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() [115]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[166]    0.0    0.00    0.00       3         fatwriter::Logger::Logger() [166]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[167]    0.0    0.00    0.00       3         fatwriter::WriterHub::WriterHub() [167]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::~WriterHubImpl() [15]
[168]    0.0    0.00    0.00       3         fatwriter::WriterHub::~WriterHub() [168]
-----------------------------------------------
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [164]
[169]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const [169]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [187]
[170]    0.0    0.00    0.00       3         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [170]
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [205]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [205]
[171]    0.0    0.00    0.00       3         std::type_info::operator==(std::type_info const&) const [171]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [222]
[172]    0.0    0.00    0.00       3         std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator() [172]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator() [161]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
[173]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl_base>::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&&) [173]
                0.00    0.00       3/3           std::remove_reference<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>::type&& std::move<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>(std::remove_reference&&) [228]
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&&) [185]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
[174]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl_base>::~shared_ptr() [174]
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [186]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::allocate_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [225]
[175]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [175]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [187]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
[176]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~shared_ptr() [176]
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [188]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
[177]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_tail(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [177]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [211]
[178]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_tail(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [177]
                0.00    0.00       3/3           std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&&&) [229]
                0.00    0.00       3/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
                0.00    0.00       3/6           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [151]
                0.00    0.00       3/6           std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_Head_base<{lambda()#1}, void>({lambda()#1}&&) [146]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple<{lambda()#1}, void>({lambda()#1}&&) [212]
[179]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...) [179]
                0.00    0.00       3/3           _ZNSt11_Tuple_implILm1EJEEC1Ev [180]
                0.00    0.00       3/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
                0.00    0.00       3/6           std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_Head_base<{lambda()#1}, void>({lambda()#1}&&) [146]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...) [179]
[180]    0.0    0.00    0.00       3         _ZNSt11_Tuple_implILm1EJEEC1Ev [180]
-----------------------------------------------
                0.00    0.00       3/3           std::atomic<bool>::atomic(bool) [213]
[181]    0.0    0.00    0.00       3         std::atomic_bool::atomic_bool(bool) [181]
                0.00    0.00       3/3           std::__atomic_base<bool>::__atomic_base(bool) [190]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::~WriterHubImpl() [15]
[182]    0.0    0.00    0.00       3         std::atomic_bool::operator=(bool) [182]
                0.00    0.00       3/3           std::__atomic_base<bool>::operator=(bool) [191]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...) [224]
[183]    0.0    0.00    0.00       3         std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple<, void>({lambda()#1}&&) [183]
                0.00    0.00       3/3           std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>::type&& std::move<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>(std::remove_reference&&) [230]
                0.00    0.00       3/3           std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple<{lambda()#1}, void>({lambda()#1}&&) [212]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [217]
[184]    0.0    0.00    0.00       3         std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [184]
                0.00    0.00       3/3           std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [211]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl_base>::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&&) [173]
[185]    0.0    0.00    0.00       3         std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&&) [185]
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [194]
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [192]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl_base>::~shared_ptr() [174]
[186]    0.0    0.00    0.00       3         std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [186]
                0.00    0.00       3/6           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [152]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [175]
[187]    0.0    0.00    0.00       3         std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [187]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [170]
                0.00    0.00       3/10          void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...) [120]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~shared_ptr() [176]
[188]    0.0    0.00    0.00       3         std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [188]
                0.00    0.00       3/6           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [152]
-----------------------------------------------
                0.00    0.00       3/3           std::__atomic_base<bool>::operator=(bool) [191]
[189]    0.0    0.00    0.00       3         std::__atomic_base<bool>::store(bool, std::memory_order) [189]
                0.00    0.00       3/6149        std::operator&(std::memory_order, std::__memory_order_modifier) [52]
-----------------------------------------------
                0.00    0.00       3/3           std::atomic_bool::atomic_bool(bool) [181]
[190]    0.0    0.00    0.00       3         std::__atomic_base<bool>::__atomic_base(bool) [190]
-----------------------------------------------
                0.00    0.00       3/3           std::atomic_bool::operator=(bool) [182]
[191]    0.0    0.00    0.00       3         std::__atomic_base<bool>::operator=(bool) [191]
                0.00    0.00       3/3           std::__atomic_base<bool>::store(bool, std::memory_order) [189]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&&) [185]
[192]    0.0    0.00    0.00       3         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [192]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [187]
[193]    0.0    0.00    0.00       3         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
                0.00    0.00       3/6           std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [143]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, unsigned long) [203]
                0.00    0.00       3/3           std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>::type&& std::move<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>(std::remove_reference&&) [227]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_ [204]
                0.00    0.00       3/6           std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [144]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&&) [185]
[194]    0.0    0.00    0.00       3         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [194]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) [197]
[195]    0.0    0.00    0.00       3         std::enable_if<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::value, void>::type std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::_S_destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper*) [195]
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) [159]
-----------------------------------------------
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE9constructIS7_IS6_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS8_PT_DpOSB_ [198]
[196]    0.0    0.00    0.00       3         _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE12_S_constructIS7_IS6_EEENSt9enable_ifIXsrNS9_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS8_PSD_DpOSE_ [196]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_ [160]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [1938]
[197]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) [197]
                0.00    0.00       3/3           std::enable_if<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::value, void>::type std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::_S_destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper*) [195]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
[198]    0.0    0.00    0.00       3         _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE9constructIS7_IS6_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS8_PT_DpOSB_ [198]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE12_S_constructIS7_IS6_EEENSt9enable_ifIXsrNS9_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS8_PSD_DpOSE_ [196]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*) [202]
[199]    0.0    0.00    0.00       3         std::enable_if<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper<__gnu_cxx::_Lock_policy>::value, void>::type std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::_S_destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper*) [199]
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::destroy<__gnu_cxx::_Lock_policy>(__gnu_cxx::_Lock_policy*) [163]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [1937]
[200]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*, unsigned long) [200]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(__gnu_cxx::_Lock_policy*, unsigned long) [162]
-----------------------------------------------
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_ [204]
[201]    0.0    0.00    0.00       3         _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_ [201]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&& std::forward<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>(std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>::type&) [126]
                0.00    0.00       3/3           _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [1937]
[202]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*) [202]
                0.00    0.00       3/3           std::enable_if<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper<__gnu_cxx::_Lock_policy>::value, void>::type std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::_S_destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper*) [199]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
[203]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, unsigned long) [203]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) [164]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
[204]    0.0    0.00    0.00       3         _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_ [204]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&& std::forward<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>(std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>::type&) [126]
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_ [201]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [170]
[205]    0.0    0.00    0.00       3         std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [205]
                0.00    0.00       3/3           std::type_info::operator==(std::type_info const&) const [171]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
[206]    0.0    0.00    0.00       3         std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >) [206]
                0.00    0.00       3/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [124]
-----------------------------------------------
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [209]
[207]    0.0    0.00    0.00       3         std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [207]
                0.00    0.00       3/12          std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() [115]
-----------------------------------------------
                0.00    0.00       3/3           _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ [165]
[208]    0.0    0.00    0.00       3         std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [208]
                0.00    0.00       3/10          std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [119]
                0.00    0.00       3/9           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) [124]
                0.00    0.00       3/12          std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() [115]
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >) [206]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE9constructIS7_IS6_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS8_PT_DpOSB_ [198]
-----------------------------------------------
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::destroy<__gnu_cxx::_Lock_policy>(__gnu_cxx::_Lock_policy*) [163]
[209]    0.0    0.00    0.00       3         std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [209]
                0.00    0.00       3/3           std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [207]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...) [224]
[210]    0.0    0.00    0.00       3         std::_Maybe_wrap_member_pointer<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::__do_wrap({lambda()#1}&&) [210]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [184]
[211]    0.0    0.00    0.00       3         std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [211]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple<, void>({lambda()#1}&&) [183]
[212]    0.0    0.00    0.00       3         std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple<{lambda()#1}, void>({lambda()#1}&&) [212]
                0.00    0.00       3/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
                0.00    0.00       3/3           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...) [179]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[213]    0.0    0.00    0.00       3         std::atomic<bool>::atomic(bool) [213]
                0.00    0.00       3/3           std::atomic_bool::atomic_bool(bool) [181]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [217]
[214]    0.0    0.00    0.00       3         std::thread::_Impl_base::_Impl_base() [214]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
[215]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::thread::_M_make_routine<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl&&) [215]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [222]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::operator=(std::thread&&) [221]
[216]    0.0    0.00    0.00       3         std::thread::swap(std::thread&) [216]
                0.00    0.00       3/3           void std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [231]
-----------------------------------------------
                0.00    0.00       3/3           _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_ [160]
[217]    0.0    0.00    0.00       3         std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [217]
                0.00    0.00       3/3           std::thread::_Impl_base::_Impl_base() [214]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [184]
-----------------------------------------------
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) [159]
[218]    0.0    0.00    0.00       3         std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::~_Impl() [218]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[219]    0.0    0.00    0.00       3         std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
                0.00    0.00       3/15          std::thread::id::id() [113]
                0.00    0.00       3/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
                0.00    0.00       3/3           std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...) [224]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::thread::_M_make_routine<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl&&) [215]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl_base>::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&&) [173]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~shared_ptr() [176]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl_base>::~shared_ptr() [174]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[220]    0.0    0.00    0.00       3         std::thread::thread() [220]
                0.00    0.00       3/15          std::thread::id::id() [113]
-----------------------------------------------
                0.00    0.00       3/3           WriterHubImpl::WriterHubImpl(int, int, int, std::string) [158]
[221]    0.0    0.00    0.00       3         std::thread::operator=(std::thread&&) [221]
                0.00    0.00       3/9           std::thread::joinable() const [123]
                0.00    0.00       3/3           std::thread::swap(std::thread&) [216]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::thread::_M_make_routine<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl&&) [215]
[222]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [222]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator() [172]
                0.00    0.00       3/12          std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() [115]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::allocate_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [225]
-----------------------------------------------
                0.00    0.00       3/3           std::__add_ref<std::tuple_element<0ul, std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}> >::type>::type std::get<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>&) [226]
[223]    0.0    0.00    0.00       3         std::__add_ref<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type std::__get_helper<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Tuple_impl<0ul, std::__add_ref>&) [223]
                0.00    0.00       3/6           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) [151]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [219]
[224]    0.0    0.00    0.00       3         std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...) [224]
                0.00    0.00       3/3           std::_Maybe_wrap_member_pointer<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::__do_wrap({lambda()#1}&&) [210]
                0.00    0.00       3/24          WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) [112]
                0.00    0.00       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple<, void>({lambda()#1}&&) [183]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [222]
[225]    0.0    0.00    0.00       3         std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::allocate_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [225]
                0.00    0.00       3/42          std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) [91]
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [175]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>) [6]
[226]    0.0    0.00    0.00       3         std::__add_ref<std::tuple_element<0ul, std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}> >::type>::type std::get<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>&) [226]
                0.00    0.00       3/3           std::__add_ref<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type std::__get_helper<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Tuple_impl<0ul, std::__add_ref>&) [223]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) [193]
[227]    0.0    0.00    0.00       3         std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>::type&& std::move<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>(std::remove_reference&&) [227]
-----------------------------------------------
                0.00    0.00       3/3           std::shared_ptr<std::thread::_Impl_base>::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&&) [173]
[228]    0.0    0.00    0.00       3         std::remove_reference<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>::type&& std::move<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>(std::remove_reference&&) [228]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) [178]
[229]    0.0    0.00    0.00       3         std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&&&) [229]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple<, void>({lambda()#1}&&) [183]
[230]    0.0    0.00    0.00       3         std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>::type&& std::move<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>(std::remove_reference&&) [230]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::swap(std::thread&) [216]
[231]    0.0    0.00    0.00       3         void std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [231]
                0.00    0.00       9/9           std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&&&) [125]
-----------------------------------------------
                0.00    0.00       2/2           std::to_string(int) [237]
[232]    0.0    0.00    0.00       2         std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [232]
                0.00    0.00       2/2           std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) [236]
-----------------------------------------------
                0.00    0.00       2/2           std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) [236]
[233]    0.0    0.00    0.00       2         char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&) [233]
                0.00    0.00       2/2           char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type) [235]
-----------------------------------------------
                0.00    0.00       2/2           char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type) [235]
[234]    0.0    0.00    0.00       2         char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [234]
                0.00    0.00      50/50          bool __gnu_cxx::__is_null_pointer<char>(char*) [87]
                0.00    0.00      50/50          std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*) [90]
-----------------------------------------------
                0.00    0.00       2/2           char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&) [233]
[235]    0.0    0.00    0.00       2         char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type) [235]
                0.00    0.00       2/2           char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [234]
-----------------------------------------------
                0.00    0.00       2/2           std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [232]
[236]    0.0    0.00    0.00       2         std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) [236]
                0.00    0.00       2/2           char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&) [233]
-----------------------------------------------
                0.00    0.00       2/2           WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
[237]    0.0    0.00    0.00       2         std::to_string(int) [237]
                0.00    0.00       2/2           std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [232]
-----------------------------------------------
                0.00    0.00       2/2           WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
[238]    0.0    0.00    0.00       2         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*) [238]
                0.00    0.00       2/4           std::remove_reference<std::string&>::type&& std::move<std::string&>(std::string&&&) [157]
-----------------------------------------------
                0.00    0.00       2/2           WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
[239]    0.0    0.00    0.00       2         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [239]
                0.00    0.00       2/4           std::remove_reference<std::string&>::type&& std::move<std::string&>(std::string&&&) [157]
-----------------------------------------------
                0.00    0.00       1/1           std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [241]
[240]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [240]
-----------------------------------------------
                0.00    0.00       1/1           WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [128]
[241]    0.0    0.00    0.00       1         std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [241]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [240]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

   [3] fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string) [145] std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) (tuple) [108] std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&)
 [121] __gthread_equal(unsigned long, unsigned long) (gthr-default.h) [146] std::_Head_base<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}, false>::_Head_base<{lambda()#1}, void>({lambda()#1}&&) (tuple) [42] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end()
  [30] __gthread_active_p() (gthr-default.h) [147] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::_List_impl() [45] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin()
  [34] __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h) [148] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_impl::~_List_impl() [13] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::clear()
  [33] __gthread_mutex_unlock(pthread_mutex_t*) (gthr-default.h) [84] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_node() [95] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::erase(std::_List_iterator<WriterHubImpl::ManageUnit>)
  [47] WriterImpl::close_file() [85] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_put_node(std::_List_node<WriterHubImpl::ManageUnit>*) [96] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_erase(std::_List_iterator<WriterHubImpl::ManageUnit>)
  [38] WriterImpl::is_file_open() [77] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_get_Node_allocator() [109] void std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_insert<WriterHubImpl::ManageUnit>(std::_List_iterator<WriterHubImpl::ManageUnit>, WriterHubImpl::ManageUnit&&)
  [99] WriterImpl::create_buffer() [116] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_init() [97] _ZNSt4listIN13WriterHubImpl10ManageUnitESaIS1_EE9_M_insertIJRKS1_EEEvSt14_List_iteratorIS1_EDpOT_
   [5] WriterImpl::release_buffer() [117] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_clear() [110] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit&&)
  [18] WriterImpl::flush()   [149] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_List_base() [98] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::push_back(WriterHubImpl::ManageUnit const&)
   [2] WriterImpl::printf(char const*, ...) [150] std::_List_base<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~_List_base() [153] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::list()
  [48] WriterImpl::open_file() [107] std::_List_node<WriterHubImpl::ManageUnit>::_List_node<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&&) [154] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::~list()
 [100] WriterImpl::WriterImpl(int, std::string const&, fatwriter::Logger*) [93] _ZNSt10_List_nodeIN13WriterHubImpl10ManageUnitEEC1IJRKS1_EEEDpOT_ [35] std::mutex::lock()
 [101] WriterImpl::~WriterImpl() [4] std::lock_guard<std::mutex>::lock_guard(std::mutex&) [32] std::mutex::unlock()
 [102] WriterImpl::~WriterImpl() [36] std::lock_guard<std::mutex>::~lock_guard() [211] std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) (tuple)
 [128] WriterHubImpl::create_instance(int, int, int, std::string, std::string&) [130] std::shared_ptr<fatwriter::WriterHub>::shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [212] std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::tuple<{lambda()#1}, void>({lambda()#1}&&) (tuple)
  [46] WriterHubImpl::claim_opening_file() [173] std::shared_ptr<std::thread::_Impl_base>::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&&) (shared_ptr.h) [213] std::atomic<bool>::atomic(bool)
  [10] WriterHubImpl::maintain_fast_list() [174] std::shared_ptr<std::thread::_Impl_base>::~shared_ptr() [60] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  [20] WriterHubImpl::maintain_slow_list() [175] std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (shared_ptr.h) [61] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  [75] WriterHubImpl::info(char const*, ...) [176] std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~shared_ptr() (shared_ptr.h) [62] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1l> > >::value, std::chrono::duration<long, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
 [103] WriterHubImpl::create(std::string const&) [118] std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base() [59] std::chrono::duration<long, std::ratio<1l, 1000000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
 [158] WriterHubImpl::WriterHubImpl(int, int, int, std::string) [151] std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_head(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) (tuple) [63] std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  [14] WriterHubImpl::~WriterHubImpl() [177] std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_M_tail(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&) (tuple) [64] std::chrono::duration<long, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1l> >, std::ratio<1l, 1000l>, long, true, false>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  [15] WriterHubImpl::~WriterHubImpl() [178] std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) (tuple) [55] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
 [232] std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [179] std::_Tuple_impl<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::_Tuple_impl<{lambda()#1}<>, void>({lambda()#1}<>&&, (void&&)...) (tuple) [56] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&)
 [159] void __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) (new_allocator.h) [180] _ZNSt11_Tuple_implILm1EJEEC1Ev [65] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, std::ratio<1l, 1l>, void>(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
 [160] _ZN9__gnu_cxx13new_allocatorINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEE9constructIS8_IS7_EEEvPT_DpOT0_ (new_allocator.h) [181] std::atomic_bool::atomic_bool(bool) [49] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
 [122] __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) (new_allocator.h) [182] std::atomic_bool::operator=(bool) [66] std::chrono::duration<long, std::ratio<1l, 1l> >::duration<long, void>(long const&)
 [161] __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::new_allocator() (new_allocator.h) [240] std::char_traits<char>::length(char const*) [67] _ZNSt6chronomiIlSt5ratioILl1ELl1000EElS1_ILl1ELl1EEEENSt11common_typeIJNS_8durationIT_T0_EENS5_IT1_T2_EEEE4typeERKS8_RKSB_
 [114] __gnu_cxx::new_allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~new_allocator() (new_allocator.h) [58] void std::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [214] std::thread::_Impl_base::_Impl_base()
  [80] __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::deallocate(std::_List_node<WriterHubImpl::ManageUnit>*, unsigned long) [6] void std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_M_invoke<>(std::_Index_tuple<>) (functional) [215] std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::thread::_M_make_routine<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl&&) (thread)
  [81] void __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::destroy<std::_List_node<WriterHubImpl::ManageUnit> >(std::_List_node<WriterHubImpl::ManageUnit>*) [183] std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple<, void>({lambda()#1}&&) (functional) [113] std::thread::id::id()
  [82] __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocate(unsigned long, void const*) [184] std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::_Bind_simple(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (functional) [216] std::thread::swap(std::thread&)
  [92] _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JRKS3_EEEvPT_DpOT0_ [7] std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>::operator()() (functional) [1] std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >::_M_run()
 [104] _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN13WriterHubImpl10ManageUnitEEE9constructIS4_JS3_EEEvPT_DpOT0_ [131] std::__shared_ptr<fatwriter::WriterHub, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<fatwriter::WriterHub>(fatwriter::WriterHub*) [217] std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::_Impl(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (thread)
 [137] __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::new_allocator() [185] std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, void>(std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&&) (shared_ptr_base.h) [218] std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::~_Impl() (thread)
 [138] __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~new_allocator() [186] std::__shared_ptr<std::thread::_Impl_base, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [219] std::thread::thread<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&) (thread)
 [162] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(__gnu_cxx::_Lock_policy*, unsigned long) (new_allocator.h) [187] std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (shared_ptr_base.h) [220] std::thread::thread()
 [163] void __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::destroy<__gnu_cxx::_Lock_policy>(__gnu_cxx::_Lock_policy*) (new_allocator.h) [188] std::__shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() (shared_ptr_base.h) [155] std::thread::~thread()
 [164] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long, void const*) (new_allocator.h) [189] std::__atomic_base<bool>::store(bool, std::memory_order) [221] std::thread::operator=(std::thread&&)
 [165] _ZN9__gnu_cxx13new_allocatorISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS9_ELNS_12_Lock_policyE2EEE9constructISC_IKSA_S8_EEEvPT_DpOT0_ (new_allocator.h) [190] std::__atomic_base<bool>::__atomic_base(bool) [88] std::iterator_traits<char*>::difference_type std::__distance<char*>(char*, char*, std::random_access_iterator_tag)
 [139] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() (new_allocator.h) [191] std::__atomic_base<bool>::operator=(bool) [72] std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::__distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::input_iterator_tag)
 [140] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() (new_allocator.h) [41] std::_List_iterator<WriterHubImpl::ManageUnit>::_List_iterator(std::__detail::_List_node_base*) [37] WriterHubImpl::ManageUnit* std::__addressof<WriterHubImpl::ManageUnit>(WriterHubImpl::ManageUnit&)
  [87] bool __gnu_cxx::__is_null_pointer<char>(char*) [43] std::_List_iterator<WriterHubImpl::ManageUnit>::operator++(int) [222] std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::make_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (shared_ptr.h)
 [129] fatwriter::create_writer_hub(int, int, int, std::string, std::string&) [40] std::_List_iterator<WriterHubImpl::ManageUnit>::operator++() [223] std::__add_ref<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type std::__get_helper<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Tuple_impl<0ul, std::__add_ref>&) (tuple)
 [166] fatwriter::Logger::Logger() [192] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [224] std::_Bind_simple_helper<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}<> >::__type std::__bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::_Bind_simple_helper&&, (WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&&)...) (functional)
 [105] fatwriter::Writer::Writer() [193] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::_Sp_make_shared_tag, std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >*, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (shared_ptr_base.h) [225] std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > std::allocate_shared<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (shared_ptr.h)
 [106] fatwriter::Writer::~Writer() [194] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [89] std::iterator_traits<char*>::iterator_category std::__iterator_category<char*>(char* const&)
 [167] fatwriter::WriterHub::WriterHub() [132] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<fatwriter::WriterHub*>(fatwriter::WriterHub*) [73] std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::iterator_category std::__iterator_category<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&)
 [168] fatwriter::WriterHub::~WriterHub() [152] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [120] void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...)
  [83] __gnu_cxx::new_allocator<std::_List_node<WriterHubImpl::ManageUnit> >::max_size() const [133] std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [226] std::__add_ref<std::tuple_element<0ul, std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}> >::type>::type std::get<0ul, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::tuple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>&) (tuple)
 [169] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const (new_allocator.h) [12] std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [227] std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>::type&& std::move<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&>(std::remove_reference&&) (move.h)
  [53] std::atomic_bool::operator bool() const [134] std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(fatwriter::WriterHub*) [111] std::remove_reference<WriterHubImpl::ManageUnit&>::type&& std::move<WriterHubImpl::ManageUnit&>(WriterHubImpl::ManageUnit&&&)
  [54] std::__atomic_base<bool>::load(std::memory_order) const [135] std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [125] std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&&&)
  [39] std::_List_iterator<WriterHubImpl::ManageUnit>::operator*() const [136] std::_Sp_counted_ptr<fatwriter::WriterHub*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [157] std::remove_reference<std::string&>::type&& std::move<std::string&>(std::string&&&)
  [31] std::_List_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_iterator<WriterHubImpl::ManageUnit> const&) const [119] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [228] std::remove_reference<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>::type&& std::move<std::shared_ptr<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >&>(std::remove_reference&&) (move.h)
  [11] std::_List_iterator<WriterHubImpl::ManageUnit>::operator->() const [195] std::enable_if<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::value, void>::type std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::_S_destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::__destroy_helper*) (alloc_traits.h) [229] std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&&&)
 [170] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [196] _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE12_S_constructIS7_IS6_EEENSt9enable_ifIXsrNS9_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS8_PSD_DpOSE_ (alloc_traits.h) [230] std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>::type&& std::move<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&>(std::remove_reference&&) (move.h)
  [50] std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator!=(std::_List_const_iterator<WriterHubImpl::ManageUnit> const&) const [197] void std::allocator_traits<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > >::destroy<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >&, std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>*) (alloc_traits.h) [231] void std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
  [69] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::end() const [198] _ZNSt16allocator_traitsISaINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEEEE9constructIS7_IS6_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS8_PT_DpOSB_ (alloc_traits.h) [126] std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const&& std::forward<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>(std::remove_reference<std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > > const>::type&) (move.h)
  [70] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::size() const [199] std::enable_if<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper<__gnu_cxx::_Lock_policy>::value, void>::type std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::_S_destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::__destroy_helper*) (alloc_traits.h) [78] WriterHubImpl::ManageUnit&& std::forward<WriterHubImpl::ManageUnit>(std::remove_reference<WriterHubImpl::ManageUnit>::type&)
  [71] std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::begin() const [200] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*, unsigned long) (alloc_traits.h) [76] WriterHubImpl::ManageUnit const&&& std::forward<WriterHubImpl::ManageUnit const&>(std::remove_reference<WriterHubImpl::ManageUnit const&>::type&)
  [44] std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [201] _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE12_S_constructISC_IKS9_S7_EEENSt9enable_ifIXsrNSE_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERSD_PSJ_DpOSK_ (alloc_traits.h) [91] std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>&& std::forward<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::remove_reference<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >::type&) (move.h)
  [57] std::chrono::duration<long, std::ratio<1l, 1l> >::count() const [202] void std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::destroy<__gnu_cxx::_Lock_policy>(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*) (alloc_traits.h) [112] WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}&& std::forward<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>(std::remove_reference<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::type&) (move.h)
 [123] std::thread::joinable() const [203] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>&, unsigned long) (alloc_traits.h) [90] std::iterator_traits<char*>::difference_type std::distance<char*>(char*, char*)
 [171] std::type_info::operator==(std::type_info const&) const [204] _ZNSt16allocator_traitsISaISt23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZN13WriterHubImplC1EiiiSsEUlvE_vEEEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EEEE9constructISC_IKS9_S7_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERSD_PT_DpOSH_ (alloc_traits.h) [74] std::iterator_traits<std::_List_const_iterator<WriterHubImpl::ManageUnit> >::difference_type std::distance<std::_List_const_iterator<WriterHubImpl::ManageUnit> >(std::_List_const_iterator<WriterHubImpl::ManageUnit>, std::_List_const_iterator<WriterHubImpl::ManageUnit>)
 [124] std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) (allocator.h) [68] std::_List_const_iterator<WriterHubImpl::ManageUnit>::_List_const_iterator(std::__detail::_List_node_base const*) [237] std::to_string(int)
 [172] std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::allocator() (allocator.h) [51] std::_List_const_iterator<WriterHubImpl::ManageUnit>::operator++() [52] std::operator&(std::memory_order, std::__memory_order_modifier)
 [115] std::allocator<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > >::~allocator() (allocator.h) [16] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, std::allocator<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [156] bool std::operator==<char>(std::allocator<char> const&, std::allocator<char> const&)
 [141] std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::allocator() [17] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, std::allocator<std::_Bind_simple<fake_test(FatWriterParameter, TestCaseParameter, std::string, std::string, std::string)::{lambda(std::string, FakeRacer)#1} ()(std::string, FakeRacer)> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [127] std::operator==(std::thread::id, std::thread::id)
 [142] std::allocator<std::_List_node<WriterHubImpl::ManageUnit> >::~allocator() [205] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) (shared_ptr_base.h) [86] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
 [143] std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >(std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> > const&) (allocator.h) [206] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >) (shared_ptr_base.h) [238] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*)
 [144] std::allocator<std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() (allocator.h) [207] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() (shared_ptr_base.h) [239] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 [233] char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&) [208] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()>(std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} (&&)()) (shared_ptr_base.h) [241] std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [234] char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [209] std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, std::allocator<std::_Bind_simple<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1} ()()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() (shared_ptr_base.h) [8] WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}::operator()() const (writer_hub.cpp)
 [235] char* std::string::_S_construct_aux<char*>(char*, char*, std::allocator<char> const&, std::__false_type) [210] std::_Maybe_wrap_member_pointer<WriterHubImpl::WriterHubImpl(int, int, int, std::string)::{lambda()#1}>::__do_wrap({lambda()#1}&&) (functional) [79] operator new(unsigned long, void*)
 [236] std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char*>(char*, char*, std::allocator<char> const&) [94] std::_List_node<WriterHubImpl::ManageUnit>* std::list<WriterHubImpl::ManageUnit, std::allocator<WriterHubImpl::ManageUnit> >::_M_create_node<WriterHubImpl::ManageUnit const&>(WriterHubImpl::ManageUnit const&&&)
